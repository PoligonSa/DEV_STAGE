name: PR theme-builder

on:
  pull_request:
    branches:
      - dev
      - master

concurrency:
  # New commit on branch cancels running workflows of the same branch
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  tokens-build:
    name: Build plasma-tokens
    runs-on: ubuntu-latest
    if: ${{ always() && contains(github.event.head_commit.message, 'auto save') }}
    env:
      NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - name: Build Theme Builder
        run: |
          npm i --no-progress --prefix="./packages/plasma-tokens"
          npm run build --prefix="./packages/plasma-tokens"
      
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      
      # Коммит изменений в полученную в предыдущем шаге ветку
      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          message: 'feat(plasma-tokens): Update `src` directory'
          branch: ${{ steps.extract_branch.outputs.branch }}
          author_name: Salute Frontend Team
          author_email: salute.developers@gmail.com

  service-build:
    name: Build plasma-theme-builder
    runs-on: ubuntu-latest
    env:
      NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
      PR_NAME: pr-${{ github.event.number }}
    steps:
      - uses: actions/checkout@v3

      # TODO: https://github.com/salute-developers/plasma/issues/255

      - uses: ./.github/actions/prepare-environment

      - name: Prepare directory for build
        run: mkdir s3_build

      # TODO: https://github.com/salute-developers/plasma/issues/603
      - name: Build Theme Builder
        env:
          REACT_APP_APPLICATION_CLIENT_ID: ${{ secrets.REACT_APP_APPLICATION_CLIENT_ID }}
          REACT_APP_AUTH_SERVER_URL: ${{ secrets.REACT_APP_AUTH_SERVER_URL }}
        run: |
          export NODE_OPTIONS=--openssl-legacy-provider
          npm i --no-progress --prefix="./website/plasma-theme-builder"
          npm run build --prefix="./website/plasma-theme-builder"
          cp -R ./website/plasma-theme-builder/build ./s3_build/plasma-theme-builder-${PR_NAME}

      - name: Install s3cmd
        run: |
          pip3 install s3cmd

      - name: s3 Upload build
        run: >
          s3cmd
          --access_key ${{ secrets.AWS_ACCESS_KEY_ID }}
          --secret_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          --host ${{ secrets.AWS_ENDPOINT }}
          --host-bucket ${{ secrets.AWS_ENDPOINT }}
          --bucket-location ${{ secrets.AWS_REGION }}
          --signature-v2
          --delete-removed
          --no-mime-magic
          sync
          ./s3_build/plasma-theme-builder-${PR_NAME}/
          s3://${{ secrets.AWS_S3_BUCKET_2 }}/pr/plasma-theme-builder-${PR_NAME}/

      - name: Post success comment
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GH_TOKEN}}
          script: |
            const branchName = context.payload.pull_request.head.ref;
            const themeName = branchName.split('theme-builder-')[1];
            const params = themeName ? `?theme=${themeName}&branch=${branchName}` : ''; 

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Theme Builder app deployed!
              
              http://plasma.sberdevices.ru/pr/plasma-theme-builder-pr-${context.issue.number}/${params}
              `
            })
